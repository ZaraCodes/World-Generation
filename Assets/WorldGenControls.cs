//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/WorldGenControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @WorldGenControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @WorldGenControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""WorldGenControls"",
    ""maps"": [
        {
            ""name"": ""JacksonControls"",
            ""id"": ""225602bf-1640-44b7-896a-f99df4e6b85b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""662735e5-9118-49b2-a7fe-ca9fd474e6e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""PassThrough"",
                    ""id"": ""87a7098b-fd90-4f5a-a085-7d87a22840d9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1d4947e0-b13c-4c41-b53b-b8358b9eb3b1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""ba0d235c-5397-404e-8f86-7161eabab2ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""ed2d786e-b1d2-4e7c-a174-be8c410ccc42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lean Left"",
                    ""type"": ""Button"",
                    ""id"": ""d9c3fbb1-1f9d-4913-9f04-e6c243f968d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lean Right"",
                    ""type"": ""Button"",
                    ""id"": ""15965aef-7038-4627-a34f-804829313db7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""0a4bc0eb-c0db-4020-ae48-d3a50479cb07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""de57e9d0-0b94-4b05-a2b0-47d63855a0b4"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42143248-81c2-40d1-9f76-c38d09bbf335"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1b212730-6c8e-41d8-934d-96ae466424b3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3f56abfc-3f2d-4b99-bea8-9eec500e2a15"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""853027b5-fd0c-49d3-a70b-bc652ef6f767"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a521eae9-f19b-4a1b-9448-bb7de249ff8b"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14a02bad-4591-4eef-a8da-39b52b21abf9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b724afdb-e53e-4410-8dfd-c118187c6fce"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16fbd48d-1527-42bc-9961-4e4ef562365a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfdf7e74-aa56-431d-9440-27583bffc8ca"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4682bfd2-174d-425e-8277-5059b588dd42"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84bac700-c185-48fb-9698-270940292eea"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61950f5d-fbbd-41df-9669-99aad2beaa76"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lean Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81a803ef-17f1-48d4-97e4-db30f9dc117b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Lean Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7baeea04-904c-4970-84a9-896b9a7ae44c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lean Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""543b90c4-bddc-4861-afcf-c90dd3d0b98a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Lean Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""778e16aa-f11a-485b-9841-d67aafca0337"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7be40d1-5925-4466-94fe-e456ba7ad8f1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""7572ab05-d513-4e0a-b0ac-93115c76a4b5"",
            ""actions"": [
                {
                    ""name"": ""UI-Back"",
                    ""type"": ""Button"",
                    ""id"": ""1a631f52-6236-44b9-b9ae-f9ed164a2b8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory-open"",
                    ""type"": ""Button"",
                    ""id"": ""1af1f26c-a293-4e05-9e53-063bee8c036b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Textbook-open"",
                    ""type"": ""Button"",
                    ""id"": ""928b7679-e414-4df0-a397-0ad94141e846"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quests-open"",
                    ""type"": ""Button"",
                    ""id"": ""e42d2e9f-b4b1-4169-841e-ce992f2115a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Options-open"",
                    ""type"": ""Button"",
                    ""id"": ""9a798666-f10c-4d0f-a6cf-00414e03f4e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fed90ccf-3172-4f17-9229-d310fc8ee4ad"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""UI-Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e1df91c-dd38-41dc-9576-db4cc72ca178"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""UI-Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e106ae5-a766-4859-894c-ef7c996a936a"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Inventory-open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73abc18c-cb4c-4ea8-b926-3f03512614a6"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Textbook-open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ff4203d-4cef-440a-a16d-bc8c605a055a"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Quests-open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1d6bafd-5838-4d88-9cd3-36990b273ac2"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Options-open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // JacksonControls
        m_JacksonControls = asset.FindActionMap("JacksonControls", throwIfNotFound: true);
        m_JacksonControls_Movement = m_JacksonControls.FindAction("Movement", throwIfNotFound: true);
        m_JacksonControls_MouseX = m_JacksonControls.FindAction("MouseX", throwIfNotFound: true);
        m_JacksonControls_MouseY = m_JacksonControls.FindAction("MouseY", throwIfNotFound: true);
        m_JacksonControls_Sprint = m_JacksonControls.FindAction("Sprint", throwIfNotFound: true);
        m_JacksonControls_Crouch = m_JacksonControls.FindAction("Crouch", throwIfNotFound: true);
        m_JacksonControls_LeanLeft = m_JacksonControls.FindAction("Lean Left", throwIfNotFound: true);
        m_JacksonControls_LeanRight = m_JacksonControls.FindAction("Lean Right", throwIfNotFound: true);
        m_JacksonControls_Interact = m_JacksonControls.FindAction("Interact", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_UIBack = m_UI.FindAction("UI-Back", throwIfNotFound: true);
        m_UI_Inventoryopen = m_UI.FindAction("Inventory-open", throwIfNotFound: true);
        m_UI_Textbookopen = m_UI.FindAction("Textbook-open", throwIfNotFound: true);
        m_UI_Questsopen = m_UI.FindAction("Quests-open", throwIfNotFound: true);
        m_UI_Optionsopen = m_UI.FindAction("Options-open", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // JacksonControls
    private readonly InputActionMap m_JacksonControls;
    private IJacksonControlsActions m_JacksonControlsActionsCallbackInterface;
    private readonly InputAction m_JacksonControls_Movement;
    private readonly InputAction m_JacksonControls_MouseX;
    private readonly InputAction m_JacksonControls_MouseY;
    private readonly InputAction m_JacksonControls_Sprint;
    private readonly InputAction m_JacksonControls_Crouch;
    private readonly InputAction m_JacksonControls_LeanLeft;
    private readonly InputAction m_JacksonControls_LeanRight;
    private readonly InputAction m_JacksonControls_Interact;
    public struct JacksonControlsActions
    {
        private @WorldGenControls m_Wrapper;
        public JacksonControlsActions(@WorldGenControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_JacksonControls_Movement;
        public InputAction @MouseX => m_Wrapper.m_JacksonControls_MouseX;
        public InputAction @MouseY => m_Wrapper.m_JacksonControls_MouseY;
        public InputAction @Sprint => m_Wrapper.m_JacksonControls_Sprint;
        public InputAction @Crouch => m_Wrapper.m_JacksonControls_Crouch;
        public InputAction @LeanLeft => m_Wrapper.m_JacksonControls_LeanLeft;
        public InputAction @LeanRight => m_Wrapper.m_JacksonControls_LeanRight;
        public InputAction @Interact => m_Wrapper.m_JacksonControls_Interact;
        public InputActionMap Get() { return m_Wrapper.m_JacksonControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JacksonControlsActions set) { return set.Get(); }
        public void SetCallbacks(IJacksonControlsActions instance)
        {
            if (m_Wrapper.m_JacksonControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMovement;
                @MouseX.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseX;
                @MouseX.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseX;
                @MouseX.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseX;
                @MouseY.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseY;
                @MouseY.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseY;
                @MouseY.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMouseY;
                @Sprint.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnSprint;
                @Crouch.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCrouch;
                @LeanLeft.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanLeft;
                @LeanLeft.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanLeft;
                @LeanLeft.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanLeft;
                @LeanRight.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanRight;
                @LeanRight.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanRight;
                @LeanRight.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLeanRight;
                @Interact.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_JacksonControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @LeanLeft.started += instance.OnLeanLeft;
                @LeanLeft.performed += instance.OnLeanLeft;
                @LeanLeft.canceled += instance.OnLeanLeft;
                @LeanRight.started += instance.OnLeanRight;
                @LeanRight.performed += instance.OnLeanRight;
                @LeanRight.canceled += instance.OnLeanRight;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public JacksonControlsActions @JacksonControls => new JacksonControlsActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_UIBack;
    private readonly InputAction m_UI_Inventoryopen;
    private readonly InputAction m_UI_Textbookopen;
    private readonly InputAction m_UI_Questsopen;
    private readonly InputAction m_UI_Optionsopen;
    public struct UIActions
    {
        private @WorldGenControls m_Wrapper;
        public UIActions(@WorldGenControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @UIBack => m_Wrapper.m_UI_UIBack;
        public InputAction @Inventoryopen => m_Wrapper.m_UI_Inventoryopen;
        public InputAction @Textbookopen => m_Wrapper.m_UI_Textbookopen;
        public InputAction @Questsopen => m_Wrapper.m_UI_Questsopen;
        public InputAction @Optionsopen => m_Wrapper.m_UI_Optionsopen;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @UIBack.started -= m_Wrapper.m_UIActionsCallbackInterface.OnUIBack;
                @UIBack.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnUIBack;
                @UIBack.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnUIBack;
                @Inventoryopen.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryopen;
                @Inventoryopen.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryopen;
                @Inventoryopen.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryopen;
                @Textbookopen.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTextbookopen;
                @Textbookopen.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTextbookopen;
                @Textbookopen.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTextbookopen;
                @Questsopen.started -= m_Wrapper.m_UIActionsCallbackInterface.OnQuestsopen;
                @Questsopen.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnQuestsopen;
                @Questsopen.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnQuestsopen;
                @Optionsopen.started -= m_Wrapper.m_UIActionsCallbackInterface.OnOptionsopen;
                @Optionsopen.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnOptionsopen;
                @Optionsopen.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnOptionsopen;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UIBack.started += instance.OnUIBack;
                @UIBack.performed += instance.OnUIBack;
                @UIBack.canceled += instance.OnUIBack;
                @Inventoryopen.started += instance.OnInventoryopen;
                @Inventoryopen.performed += instance.OnInventoryopen;
                @Inventoryopen.canceled += instance.OnInventoryopen;
                @Textbookopen.started += instance.OnTextbookopen;
                @Textbookopen.performed += instance.OnTextbookopen;
                @Textbookopen.canceled += instance.OnTextbookopen;
                @Questsopen.started += instance.OnQuestsopen;
                @Questsopen.performed += instance.OnQuestsopen;
                @Questsopen.canceled += instance.OnQuestsopen;
                @Optionsopen.started += instance.OnOptionsopen;
                @Optionsopen.performed += instance.OnOptionsopen;
                @Optionsopen.canceled += instance.OnOptionsopen;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IJacksonControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnLeanLeft(InputAction.CallbackContext context);
        void OnLeanRight(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnUIBack(InputAction.CallbackContext context);
        void OnInventoryopen(InputAction.CallbackContext context);
        void OnTextbookopen(InputAction.CallbackContext context);
        void OnQuestsopen(InputAction.CallbackContext context);
        void OnOptionsopen(InputAction.CallbackContext context);
    }
}
